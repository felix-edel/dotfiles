# Source a python virtualenv activation script
# Sources an virtualenv activation script only by the name of the venv
# The venv must exist in ~/.virtualenvs/<venv>
venv() {
    if [[ -z "$1" ]]; then
        echo "Sources an virtualenv activation script only by the name of" \
             "the virtualenv"
        echo "The virtualenv must exist either as tox env in the project" \
             "or in ~/.virtualenvs/<venv>"
        echo "Usage: venv <name>"
    else
        if [ -d "$(pwd)/.tox/${1}" ]; then
            source $(pwd)/.tox/${1}/bin/activate
        else
            # TODO Would be great to have some auto-completion feature, showing
            # all available venvs inside this directory (indpendent from where
            # the script is actually called.
            source ~/.virtualenvs/"$1"/bin/activate
        fi
    fi
}

# Create a new directory and enter it
mk() {
  mkdir -p "$@" && cd "$@"
}

# Pretty print json from String
prettyjson_s() {
    echo "$1" | python -m json.tool
}

# Pretty print json from file
prettyjson_f() {
    python -m json.tool "$1"
}

# Pretty print json from URL
prettyjson_w() {
    curl "$1" | python -m json.tool
}

# Clean pyc|o and __pycache__ files/folders
pyclean() {
    find . -type f -name "*.py[co]" -delete -o -type d -name __pycache__ -delete
}
